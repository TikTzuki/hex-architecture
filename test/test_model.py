from loguru import logger
from sqlalchemy.orm import Session

from database.models import *

from database.models.profile.cust_group_item.model import ProfileCustGroupItem


async def test_model(oracle_session: Session):
    models = [
        AssetOther,
        AssetRealEstate,
        AssetTransportation,
        BusinessFinanceCashflow,
        BusinessFinanceCashflowVendor,
        BusinessFinanceCashflowValue,
        Collateral,
        CollCargo,
        CollCargoOwner,
        CollMachine,
        CollMachineOwner,
        CollOther,
        CollOtherOwner,
        CollPaper,
        CollPaperOwner,
        CollReApart,
        CollReApartRoom,
        CollReApartLand,
        CollReApartLandUsed,
        CollReApartOwner,
        CollReApartOwnerCert,
        CollReApartOwnerCertItem,
        CollReApartOwnerAuth,
        CollReLandConst,
        CollReLandConstItem,
        CollReLandConstItemDetail,
        CollReLandConstItemOwner,
        CollReLandConstItemOwnerAuth,
        CollReLandConstItemCert,
        CollReLandConstItemCertItem,
        CollReLand,
        CollReLandOwner,
        CollReLandOwnerAuth,
        CollReLandCert,
        CollReLandCertItem,
        CollReLandUsed,
        CollReMarket,
        CollReMarketCert,
        CollReMarketCertItem,
        CollReMarketOwner,
        CollReMarketOwnerAuth,
        CollRightProperty,
        CollRightPropertyOwner,
        CollRightStock,
        CollRightStockOwner,
        CollTran,
        CollTransLegalDocument,
        CollTransOwner,
        CollPriceCert,
        CollRe,
        CollPriceCertAsset,
        CollPriceCertAssetAppraisal,
        CreditCard,
        CreditCollateral,
        CreditInstitution,
        CreditInstitutionLoan,
        CytmCcyDefnMaster,
        FinanceMetadata,
        FinanceMetadataGroup,
        FinanceMetadataItem,
        FinanceTimeline,
        FinanceTimelineAssign,
        IncomeSequence,
        UdtmLov,
        District,
        Country,
        Branch,
        Province,
        Ward,
        MaLoanProductReport,
        ProfileReportLog,
        ProfileReports,
        SourceIncomePension,
        SourceIncomeStock,
        SourceIncomeSalary,
        SourceIncomeOther,
        SourceIncomeGroupAsset,
        SourceIncomeDeposit,
        SourceIncomeCompany,
        SourceIncomeBusinessHousehold, Profile,
        ProfileRiskItem,
        ProfileIncome,
        ProfileExceptionItem,
        ProfileCost,
        Policy,
        PolicyRule,
        PolicyGroup,
        PolicyDetail,
        Person,
        PersonalRelationship,
        PersonMarried,
        PersonIdentity,
        PersonGroupIncome,
        PersonFccCore,
        PersonGroupIncomeDetail,
        PersonEducation,
        PersonCreditInstitutionRelationship,
        PersonBusiness,
        PersonBusinessFinanceReport,
        PersonBusinessWarehouse,
        PersonBusinessAddress,
        PersonAddress,
        MaBusinessLine,
        MaFrequence,
        LoanProduct,
        LoanProductPolicy,
        MaAppraisalUnit,
        DetmClgBrnCode,
        MaBankCode,
        GetmCollCategory,
        MaPersonalRep,
        MaCollType,
        LosMaCollTransType,
        MaCostType,
        MaCreditCard,
        MaCreditProductCard,
        MaBusinessType,
        MaCustomerType,
        Partner,
        PartnerProduct,
        PartnerLoanProduct,
        ProfileSequenceItem,
        ProfileScore,
        MaDocumentType,
        MaQuestion,
        ProductDocumentRule,
        ProductQuestion,
        ProfileAnswerCus,
        ProfileDocument,
        MaCreditGroupCustomer,
        ProfileCreditModified,
        ProfileCreditPublished,
        ProfileCreditSequenceItem,
        ProfileCreditSuppCard,
        ProfileCustGroupItem,
        MaCardPromotion,
        ProductPromotion,
        ProfileCreditCardDelivery,
        ProfileCreditPromotion,
        MaCreditGroupCustomerItem,
        MaCollMachineLegal,
        PersonCreditScoreSegment,
        PersonCreditScore,
        MaCicScore,
        MaCicScoreDetail,
        RegionalOffice,
        ProfileCreditStatementMethod
    ]
    for model in models:
        try:
            oracle_session.query(model).fist()
        except Exception as ex:
            logger.error(model)
            logger.warning(ex)
